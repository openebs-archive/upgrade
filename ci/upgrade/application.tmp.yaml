# Copyright Â© 2020 The OpenEBS Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: cstor.openebs.io/v1
kind: CStorPoolCluster
metadata:
  name: cspc-stripe
  namespace: openebs
spec:
  pools:
    - nodeSelector:
        kubernetes.io/hostname: "NODENAME"
      dataRaidGroups:
      - blockDevices:
          - blockDeviceName: "CSPCBD"
      poolConfig:
        dataRaidGroupType: "stripe"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: openebs-cstor-csi
provisioner: cstor.csi.openebs.io
allowVolumeExpansion: true
parameters:
  cas-type: cstor
  cstorPoolCluster: cspc-stripe
  replicaCount: "1"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: demo-csi-vol-claim
spec:
  storageClassName: openebs-cstor-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
     storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: percona
  labels:
    lkey: lvalue
    openebs.io/target-affinity: percona
spec:
  replicas: 1
  selector:
    matchLabels:
      lkey: lvalue
  template:
    metadata:
      labels:
        lkey: lvalue
        openebs.io/target-affinity: percona
    spec:
      containers:
        - resources:
            limits:
              cpu: 0.5
          name: percona
          image: openebs/tests-custom-percona:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--ignore-db-dir"
            - "lost+found"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: k8sDem0
          ports:
            - containerPort: 3306
              name: percona
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: data-vol
          #<!-- BEGIN ANSIBLE MANAGED BLOCK -->
          livenessProbe:
            exec:
              command: ["bash", "sql-test.sh"]
            initialDelaySeconds: 60
            periodSeconds: 1
            timeoutSeconds: 10
          #<!-- END ANSIBLE MANAGED BLOCK --> 
      volumes:
        - name: data-vol
          persistentVolumeClaim:
            claimName: demo-csi-vol-claim
---
apiVersion: v1
kind: Service
metadata:
  name: percona-csi-mysql
  labels:
    lkey: lvalue
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
      lkey: lvalue
